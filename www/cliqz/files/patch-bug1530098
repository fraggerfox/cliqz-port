https://github.com/rust-lang/libc/commit/5e187562eed6
https://github.com/rust-lang/libc/commit/e628de2d7d40
https://github.com/rust-lang/libc/commit/6c1e2dec8f2b
https://github.com/rust-lang/libc/commit/69c9c541f76c

diff --git src/unix/bsd/freebsdlike/dragonfly/mod.rs src/unix/bsd/freebsdlike/dragonfly/mod.rs
index 9e1082e53..8149917ee 100644
--- mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/dragonfly/mod.rs
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/dragonfly/mod.rs
@@ -1,3 +1,4 @@
+pub type c_char = i8;
 pub type clock_t = u64;
 pub type ino_t = u64;
 pub type lwpid_t = i32;
@@ -210,6 +211,12 @@ s! {
         pub sdl_rcf: ::c_ushort,
         pub sdl_route: [::c_ushort; 16],
     }
+
+    pub struct stack_t {
+        pub ss_sp: *mut ::c_char,
+        pub ss_size: ::size_t,
+        pub ss_flags: ::c_int,
+    }
 }
 
 pub const RAND_MAX: ::c_int = 0x7fff_ffff;
diff --git src/unix/bsd/freebsdlike/freebsd/aarch64.rs src/unix/bsd/freebsdlike/freebsd/aarch64.rs
index 3d61f889d..ef3b13acb 100644
--- mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/aarch64.rs
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/aarch64.rs
@@ -1,3 +1,4 @@
+pub type c_char = u8;
 pub type c_long = i64;
 pub type c_ulong = u64;
 pub type time_t = i64;
diff --git src/unix/bsd/freebsdlike/freebsd/arm.rs src/unix/bsd/freebsdlike/freebsd/arm.rs
new file mode 100644
index 000000000..bc4da64d0
--- /dev/null
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/arm.rs
@@ -0,0 +1,40 @@
+pub type c_char = u8;
+pub type c_long = i32;
+pub type c_ulong = u32;
+pub type time_t = i64;
+pub type suseconds_t = i32;
+
+s! {
+    pub struct stat {
+        pub st_dev: ::dev_t,
+        pub st_ino: ::ino_t,
+        pub st_mode: ::mode_t,
+        pub st_nlink: ::nlink_t,
+        pub st_uid: ::uid_t,
+        pub st_gid: ::gid_t,
+        pub st_rdev: ::dev_t,
+        pub st_atime: ::time_t,
+        pub st_atime_nsec: ::c_long,
+        pub st_atime_pad: ::c_long,
+        pub st_mtime: ::time_t,
+        pub st_mtime_nsec: ::c_long,
+        pub st_mtime_pad: ::c_long,
+        pub st_ctime: ::time_t,
+        pub st_ctime_nsec: ::c_long,
+        pub st_ctime_pad: ::c_long,
+        pub st_size: ::off_t,
+        pub st_blocks: ::blkcnt_t,
+        pub st_blksize: ::blksize_t,
+        pub st_flags: ::fflags_t,
+        pub st_gen: ::uint32_t,
+        pub st_lspare: ::int32_t,
+        pub st_birthtime: ::time_t,
+        pub st_birthtime_nsec: ::c_long,
+        pub st_birthtime_pad: ::c_long,
+    }
+}
+
+// should be pub(crate), but that requires Rust 1.18.0
+#[doc(hidden)]
+pub const _ALIGNBYTES: usize = mem::size_of::<::c_int>() - 1;
+pub const MAP_32BIT: ::c_int = 0x00080000;
diff --git src/unix/bsd/freebsdlike/freebsd/mod.rs src/unix/bsd/freebsdlike/freebsd/mod.rs
index a64dbc468..60f38a0c6 100644
--- mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/mod.rs
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/mod.rs
@@ -182,6 +182,12 @@ s! {
         pub sdl_slen: ::c_uchar,
         pub sdl_data: [::c_char; 46],
     }
+
+    pub struct stack_t {
+        pub ss_sp: *mut ::c_void,
+        pub ss_size: ::size_t,
+        pub ss_flags: ::c_int,
+    }
 }
 
 pub const SIGEV_THREAD_ID: ::c_int = 4;
@@ -1034,6 +1040,12 @@ cfg_if! {
     } else if #[cfg(target_arch = "aarch64")] {
         mod aarch64;
         pub use self::aarch64::*;
+    } else if #[cfg(target_arch = "arm")] {
+        mod arm;
+        pub use self::arm::*;
+    } else if #[cfg(target_arch = "powerpc64")] {
+        mod powerpc64;
+        pub use self::powerpc64::*;
     } else {
         // Unknown target_arch
     }
diff --git src/unix/bsd/freebsdlike/freebsd/powerpc64.rs src/unix/bsd/freebsdlike/freebsd/powerpc64.rs
new file mode 100644
index 000000000..c06e1aec8
--- /dev/null
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/powerpc64.rs
@@ -0,0 +1,36 @@
+pub type c_char = u8;
+pub type c_long = i64;
+pub type c_ulong = u64;
+pub type time_t = i64;
+pub type suseconds_t = i64;
+
+s! {
+    pub struct stat {
+        pub st_dev: ::dev_t,
+        pub st_ino: ::ino_t,
+        pub st_mode: ::mode_t,
+        pub st_nlink: ::nlink_t,
+        pub st_uid: ::uid_t,
+        pub st_gid: ::gid_t,
+        pub st_rdev: ::dev_t,
+        pub st_atime: ::time_t,
+        pub st_atime_nsec: ::c_long,
+        pub st_mtime: ::time_t,
+        pub st_mtime_nsec: ::c_long,
+        pub st_ctime: ::time_t,
+        pub st_ctime_nsec: ::c_long,
+        pub st_size: ::off_t,
+        pub st_blocks: ::blkcnt_t,
+        pub st_blksize: ::blksize_t,
+        pub st_flags: ::fflags_t,
+        pub st_gen: ::uint32_t,
+        pub st_lspare: ::int32_t,
+        pub st_birthtime: ::time_t,
+        pub st_birthtime_nsec: ::c_long,
+    }
+}
+
+// should be pub(crate), but that requires Rust 1.18.0
+#[doc(hidden)]
+pub const _ALIGNBYTES: usize = mem::size_of::<::c_long>() - 1;
+pub const MAP_32BIT: ::c_int = 0x00080000;
diff --git src/unix/bsd/freebsdlike/freebsd/x86.rs src/unix/bsd/freebsdlike/freebsd/x86.rs
index 8a5e5f9fb..84ebf24cf 100644
--- mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/x86.rs
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/x86.rs
@@ -1,3 +1,4 @@
+pub type c_char = i8;
 pub type c_long = i32;
 pub type c_ulong = u32;
 pub type time_t = i32;
diff --git src/unix/bsd/freebsdlike/freebsd/x86_64.rs src/unix/bsd/freebsdlike/freebsd/x86_64.rs
index 3d61f889d..148149b11 100644
--- mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/x86_64.rs
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/freebsd/x86_64.rs
@@ -1,3 +1,4 @@
+pub type c_char = i8;
 pub type c_long = i64;
 pub type c_ulong = u64;
 pub type time_t = i64;
diff --git src/unix/bsd/freebsdlike/mod.rs src/unix/bsd/freebsdlike/mod.rs
index 75a7a670e..4e40cb651 100644
--- mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/mod.rs
+++ mozilla-release/third_party/rust/libc/src/unix/bsd/freebsdlike/mod.rs
@@ -1,4 +1,3 @@
-pub type c_char = i8;
 pub type dev_t = u32;
 pub type mode_t = u16;
 pub type pthread_attr_t = *mut ::c_void;
@@ -82,13 +81,6 @@ s! {
         pub sa_mask: sigset_t,
     }
 
-    pub struct stack_t {
-        // In FreeBSD 11 and later, ss_sp is actually a void*
-        pub ss_sp: *mut ::c_char,
-        pub ss_size: ::size_t,
-        pub ss_flags: ::c_int,
-    }
-
     pub struct sched_param {
         pub sched_priority: ::c_int,
     }
